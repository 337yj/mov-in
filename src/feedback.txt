
- 참고하셨던 UI, 디자인 있는지 궁금합니다.
    - PPT에 추가하였습니다!
    - https://www.figma.com/file/RYtczmcCmcPkRGRCw1JfVd/PPT?type=design&node-id=78-3131&t=d4tcF1Gu5DERELQ4-4


- 재사용이 가능한 컴포넌트를 만드는 것은 리액트의 중요한 점입니다. 
  컴포넌트 제작하는데 있어 중요한 요소는 무엇이 있을까요?

  컴포넌트를 제작하는데 있어 중요한 요소에는 
  - 우선 Props를 활용하여 컴포넌트의 재사용성을 높이는것이 있습니다.
  - 스타일링 분리가 있습니다. 컴포넌트에서 스타일링을 분리하여 관리하면, 스타일링의 변경이 발생해도 컴포넌트의 기능을 수정하지 않아도 됩니다. 
    이를 위해서는 스타일링을 외부에서 전달할 수 있는 Props를 활용하거나, 스타일링을 별도의 CSS 파일로 분리하여 관리할 수 있습니다. 
  - 마지막으로, SOLID의 OCP 원칙 적용을 적용하는 것입니다. 
    SOLID의 OCP 원칙은 기존의 코드를 변경하지 않으면서,기능을 추가할 수 있도록 설계가 되어야 한다는 원칙입니다. 
    이를 적용하면, 기능의 작동이 변경될 때는 기존의 코드를 수정하지 않고도 새로운 기능을 추가하거나 수정할 수 있습니다.
    예를 들어, 컴포넌트에서 특정한 기능을 구현한 코드를 작성할 때, 이 코드는 해당 기능에 대해서는 완벽하게 동작하도록 작성되어야 합니다. 
    그러나 이 코드는 다른 기능이 추가되거나 변경될 때도 수정되지 않도록 설계되어야 합니다. 
    이를 위해서는 컴포넌트의 확장성을 고려하여 코드를 작성해야 합니다.
  

[ 자랑하고 싶은 자신있는 기능 ] 

1) '감상 포인트' '긴장감 지수' 선택 기능 있는데, 어떻게 구현하셨나요?
    감상포인트는 최대 3개까지 다중선택이 가능하고, 긴장감 지수는 단일선택이 되도록 구현했는데요,
    사용자가 선택한 감상포인트와 긴장감지수를 처리하는 방법은 각 태그를 클릭할 때마다 선택 상태를 업데이트하는 것입니다.
    
    선택된 감상포인트와 긴장감지수 태그의 정보를 저장하는 배열을 각각 ‘selectedPoints’, ‘selectedTension’ 이라고 한다면, 
    onClickPoint 함수와 onClickTension 함수에서는 클릭한 태그가 이미 배열안에 있는지 확인 하고, 있으면 해당 태그를 선택 해제합니다.
    
    이를 구현하기 위해서는 자바스크립트의 배열 메서드인  inCludes메서드를 사용하고,
    조건은 Tag 컴포넌트의 isDisabled 속성을 통해 구현됩니다.
    만약 ‘selectedPoints’ 배열의 길이기 3보다 크거나 같고, 
    현재 선택되어있는 감상 포인트에 해당하는 태그를 클릭하면 isDisabled 속성이 true로 설정되어 버튼을 비활성화시킵니다.
    
    이로써, 사용자는 선택할 수 있는 감상포인트가 최대 3개이며, 
    현재 선택된 포인트를 바꾸기 위해서는 먼저 선택한 포인트 중 하나를 선택 해제해야 한다는 것을 알게됩니다.


2) '신고 기능' 이 있는데, 어떻게 구현하셨나요?
    리뷰에 있는 신고하기 버튼을 누르면 신고모달이 열리고 해당 리뷰의 데이터가 신고모달 컴포넌트로 전달됩니다.
    신고모달에서는 사용자가 선택한 신고 사유와 함께 해당 리뷰의 데이터를 전달하여 신고 api를 호출하여 신고를 생성합니다.
    
    그 뒤 관리자는 신고관리 페이지에서 신고 내역을 확인할 수 있는데, 
    이 때 신고 목록을 조회하는 api를 호출하여 데이터를 받아와서 화면에 보이도록하고,  
    체크박스로 선택한 신고 항목들을 무시하여 보류를 하거나 삭제하여 없애기 또는 사용자를 탈퇴 시킬 수 있습니다.
    
    무시, 탈퇴의 경우 신고처리 유형을 반환하는 함수를 만들어 
    매개변수인 type이 “IGNORE”일 경우엔 무시를 type이 “USER_DELETE”일 경우엔 탈퇴를 반환하여 신고유형을 구분하고, 
    해당 신고 id와 함께 신고상태를 업데이트하는 api에 전달하여 처리합니다. 
    삭제의 경우에는 신고 id만 신고삭제 api에 전달해서 처리할 수 있습니다.


3) 배포 자동화
    AWS S3를 통해 서버를 배포한 뒤, Github-Action 을 통해 배포 자동화 했습니다
    배포 자동화를 하며 2가지 에러를 경험 했었는데요
    - 하나는 deploy.yml 에 작성된 작업 환경 (ubuntu 버전) 에서 에러가 발생 됐고,
    - 또 다른 하나는 버킷에 퍼블릭 엑세스가 되어 있었음에도 불구하고, 버킷에 업로드한 font, svg 등 파일에 접근 에러가 났었습니다.
    - 첫번째 에러의 경우, 2022년 기준 GitHub Action 에서 지원 하지 않는 ubuntu 버전을 입력 해둔 상태였기 때문에 최신 상태인 20.04 로 올려주었고
    - 객체 접근 문제는 생성한 버켓의 권한에서 putObject 과 GetObject 에 대한 정책을 추가하여 해결을 할 수 있었습니다.